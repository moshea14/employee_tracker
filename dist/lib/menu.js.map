{"version":3,"file":"menu.js","sourceRoot":"","sources":["../../src/lib/menu.ts"],"names":[],"mappings":"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","sourcesContent":["import inquirer from 'inquirer';\nimport 'console.table';\n\nimport { getAllEmployees, getAllRoles, getAllDepartments, updateEmployee, addDepartment, addRole, addEmployee, getEmployeeManager, getAllManagers, getEmployeeDept, updateEmpManager, deleteDepartment, delRole } from './query.js';\n\nlet showWelcome = false;\n\n\nexport async function updateEmployeeId() {\n    const employeeArray = await getAllEmployees(true);\n    const rolesArray = await getAllRoles();\n    const { id, role_id } = await inquirer.prompt([\n        {\n            message: 'Please select an employee to update',\n            name: 'id',\n            type: 'list',\n            choices: employeeArray.map((userObj) => {\n                return {\n                    name: userObj.full_name,\n                    value: userObj.id\n                }\n            })\n        },\n        {\n            message: 'Please select a new role for the employee',\n            name: 'role_id',\n            type: 'list',\n            choices: rolesArray.map((roleObj) => {\n                return {\n                    name: roleObj.title,\n                    value: roleObj.id\n                }\n            })\n        },\n    ]);\n\n    await updateEmployee(id, role_id);\n    console.log('\\nEmployee updated successfully!\\n');\n};\n\nexport async function updateEmployeeManager() {\n    const employeeArray = await getAllEmployees(true);\n    const managerArray = await getAllManagers();\n    const { id, manager_id} = await inquirer.prompt([\n        {\n            message: 'Please select an employee to update',\n            name: 'id',\n            type: 'list',\n            choices: employeeArray.map((userObj) => {\n                return {\n                    name: userObj.full_name,\n                    value: userObj.id\n                }\n            })\n        },\n        {\n            message: 'Please select a new manager for the employee',\n            name: 'manager_id',\n            type: 'list',\n            choices: managerArray.map((userObj) => {\n                return {\n                    name: userObj.first_name + ' ' + userObj.last_name,\n                    value: userObj.id\n                }\n            })\n        }\n    ])\n\n    await updateEmpManager(id, manager_id);\n    console.log('\\nEmployee manager updated successfully!\\n');\n\n}\n\nexport async function showAllEmployees() {\n    const employeesArray = await getAllEmployees(false);\n    console.table(employeesArray);\n};\n\nexport async function showEmployeeManager() {\n    const managerArray = await getAllManagers();\n    const {employeeByManager} = await inquirer.prompt({\n        message: 'Please select a manager to view their employee(s)',\n        name: 'employeeByManager',\n        type: 'list',\n        choices: managerArray.map((manObj) => {\n            return {\n                name: manObj.first_name + ' ' + manObj.last_name,\n                value: manObj.id\n            }\n        })\n    })\n\n    const byManager = await getEmployeeManager(employeeByManager);\n    console.table(byManager);\n};\n\nexport async function showEmployeeDept() {\n    const deptArray = await getAllDepartments();\n    const {employeeByDept} = await inquirer.prompt({\n        message: 'Please select a department to view the employee(s)',\n        name: 'employeeByDept',\n        type: 'list',\n        choices: deptArray.map((deptObj) => {\n            return {\n                name: deptObj.name,\n                value: deptObj.id\n            }\n        })\n    })\n\n    const byDept = await getEmployeeDept(employeeByDept);\n    console.table(byDept);\n};\n\nexport async function showAllRoles() {\n    const rolesArray = await getAllRoles();\n    console.table(rolesArray);\n};\n\nexport async function showAllDepartments() {\n    const departmentsArray = await getAllDepartments();\n    console.table(departmentsArray);\n};\n\nexport async function showAddDepartment() {\n    const departmentsArray = await getAllDepartments();\n    const { addNewDepartment } = await inquirer.prompt({\n        message: 'Please type the name of the department you would like to add',\n        name: 'addNewDepartment',\n        type: 'input'\n    });\n\n\n    if (addNewDepartment) {\n        departmentsArray.push(addNewDepartment);\n        await addDepartment(addNewDepartment);\n        console.log('\\nDepartment added successfully!\\n');\n    }\n\n};\n\nexport async function showAddRole() {\n    try {\n        const rolesArray = await getAllRoles();\n        const { title, salary, departmentId } = await inquirer.prompt([\n            {\n                message: 'Please type the name of the role you would like to add',\n                name: 'title',\n                type: 'input'\n            },\n            {\n                message: 'Please enter the salary',\n                name: 'salary',\n                type: 'input'\n            },\n            {\n                message: 'Please enter the department id',\n                name: 'departmentId',\n                type: 'input'\n            },\n        ]);\n\n        if (title && salary && departmentId) {\n            rolesArray.push(title, salary, departmentId);\n            await addRole(title, salary, departmentId);\n            console.log('\\nRole added successfully!\\n');\n        }\n    } catch (error) {\n        console.error('An error occurred:', error);\n    }\n\n};\n\nexport async function showAddEmployee() {\n    const employeesArray = await getAllEmployees(true);\n    const { firstName, lastName, roleId, managerId } = await inquirer.prompt([\n        {\n            message: 'Please type the first name of the employee you would like to add',\n            name: 'firstName',\n            type: 'input'\n        },\n        {\n            message: 'Please type the last name of the employee you would like to add',\n            name: 'lastName',\n            type: 'input'\n        },\n        {\n            message: 'Please enter the role ID for this employee',\n            name: 'roleId',\n            type: 'input'\n        },\n        {\n            message: 'Please enter the manager ID for this new employee',\n            name: 'managerId',\n            type: 'input'\n        }\n    ]);\n\n    \n    if (firstName && lastName && roleId && managerId) {\n        employeesArray.push(firstName, lastName, roleId, managerId);\n        await addEmployee(firstName, lastName, roleId, managerId);\n        console.log('\\nEmployee added successfully!\\n');\n    }\n\n};\n\nexport async function deleteDept() {\n    const departmentsArray = await getAllDepartments();\n    const {id} = await inquirer.prompt({\n        message: 'Please select the department you would like to delete',\n        name: 'id',\n        type: 'list',\n        choices: departmentsArray.map((userObj) => {\n            return {\n                name: userObj.name,\n                value: userObj.id\n            }\n        })\n    })\n\n    await deleteDepartment(id);\n};\n\nexport async function deleteRole() {\n    const rolesArray = await getAllRoles();\n    const {id} = await inquirer.prompt({\n        message: 'Please select the role you would like to delete',\n        name: 'id',\n        type: 'list',\n        choices: rolesArray.map((userObj) => {\n            return {\n                name: userObj.title,\n                value: userObj.id\n            }\n        })\n    })\n\n    await delRole(id);\n};\n\nexport async function showMainMenu() {\n    if (!showWelcome) {\n        console.log('\\nWelcome to the Employee Tracker\\n');\n        showWelcome = true;\n    }\n\n    const { optionFunction } = await inquirer.prompt({\n        message: 'Please select an option',\n        name: 'optionFunction',\n        type: 'list',\n        choices: [\n            {\n                name: 'View All Departments',\n                value: showAllDepartments\n            },\n            {\n                name: 'View All Roles',\n                value: showAllRoles\n            },\n            {\n                name: 'View All Employees',\n                value: showAllEmployees\n            },\n            {\n                name: 'Add A Department',\n                value: showAddDepartment\n            },\n            {\n                name: 'Add A Role',\n                value: showAddRole\n            },\n            {\n                name: 'Add An Employee',\n                value: showAddEmployee\n            },\n            {\n                name: 'Show Employee By Manager',\n                value: showEmployeeManager\n            },\n            {\n                name: 'Show Employee By Department',\n                value: showEmployeeDept\n            },\n            {\n                name: 'Update An Employee Role',\n                value: updateEmployeeId\n            },\n            {\n                name: 'Update An Employee\\'s Manager',\n                value: updateEmployeeManager\n            },\n            {\n                name: 'Delete A Department',\n                value: deleteDept\n            },\n            {\n                name: 'Delete A Role',\n                value: deleteRole\n            },\n            {\n                name: 'Quit',\n                value: 0\n            }\n        ]\n    });\n\n    if (!optionFunction) {\n        console.log('\\nThanks for using the Employee Tracker!\\n');\n        process.exit();\n    }\n\n    await optionFunction();\n\n    showMainMenu();\n}\n"]}