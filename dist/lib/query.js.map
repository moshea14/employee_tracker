{"version":3,"file":"query.js","sourceRoot":"","sources":["../../src/lib/query.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,yBAAyB,CAAC;AAC7C,OAAO,eAAe,CAAC;AAEvB,MAAM,CAAC,KAAK,UAAU,iBAAiB;IACnC,MAAM,GAAG,GAAG;;;;KAIX,CAAC;IAEF,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEvC,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,WAAW;IAC7B,MAAM,GAAG,GAAG;;;;;;;;;KASX,CAAC;IAEF,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEvC,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,eAAe,CAAC,KAAc;IAChD,IAAI,GAAG,CAAC;IACR,IAAI,KAAK,EAAE,CAAC;QACR,GAAG,GAAG;;;;;SAKL,CAAA;IAEL,CAAC;SAAM,CAAC;QACJ,GAAG,GAAG;;;;;;;;;;;;;;;;SAgBL,CAAA;IACL,CAAC;IAED,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEvC,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,cAAc;IAChC,MAAM,GAAG,GAAG;;;;;;;;KAQX,CAAC;IAEF,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEvC,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,kBAAkB,CAAC,UAAkB;IACvD,MAAM,GAAG,GAAG;;;;;;;;;KASX,CAAC;IAEF,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IAErD,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,eAAe,CAAC,aAAqB;IACvD,MAAM,GAAG,GAAG;;;;;;;;;;KAUX,CAAC;IAEF,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;IAExD,OAAO,IAAI,CAAC;AAChB,CAAC;AAID,MAAM,CAAC,KAAK,UAAU,aAAa,CAAC,IAAY;IAC5C,MAAM,GAAG,GAAG;;KAEX,CAAC;IAEF,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AACpC,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,OAAO,CAAC,KAAa,EAAE,MAAc,EAAE,aAAqB;IAC9E,MAAM,GAAG,GAAG;;KAEX,CAAC;IAEF,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC,CAAC;AAC5D,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,WAAW,CAAC,UAAkB,EAAE,SAAiB,EAAE,OAAe,EAAE,UAAkB;IACxG,MAAM,GAAG,GAAG;;KAEX,CAAC;IAEF,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC;AAC1E,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,cAAc,CAAC,EAAU,EAAE,OAAe;IAC5D,MAAM,GAAG,GAAG;;KAEX,CAAC;IAEF,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;AAC3C,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,EAAU,EAAE,UAAkB;IACjE,MAAM,GAAG,GAAG;;KAEX,CAAC;IAEF,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;AAC9C,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,EAAU;IAC7C,MAAM,GAAG,GAAG;;KAEX,CAAC;IAEF,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAClC,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,OAAO,CAAC,EAAU;IACpC,MAAM,GAAG,GAAG;;KAEX,CAAC;IAEF,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAClC,CAAC","sourcesContent":["import client from \"../config/connection.js\";\nimport 'console.table';\n\nexport async function getAllDepartments () {\n    const sql = `\n    SELECT\n    *\n    FROM department;\n    `;\n\n    const {rows} = await client.query(sql);\n\n    return rows;\n}\n\nexport async function getAllRoles() {\n    const sql = `\n    SELECT\n        role.id,\n        role.title,\n        department.name AS department,\n        role.salary\n    FROM role\n    LEFT JOIN department\n        ON role.department_id = department.id\n    `;\n\n    const {rows} = await client.query(sql);\n\n    return rows;\n}\n\nexport async function getAllEmployees(basic: boolean) {\n    let sql;\n    if (basic) {\n        sql = `\n        SELECT\n            id,\n            CONCAT(first_name, ' ', last_name) AS full_name\n        FROM employee\n        `\n\n    } else {\n        sql = `\n        SELECT\n            employee.id,\n            employee.first_name,\n            employee.last_name,\n            role.title,\n            department.name AS department,\n            role.salary,\n            CONCAT(employee_manager.first_name, ' ', employee_manager.last_name) AS manager\n        FROM employee\n        LEFT JOIN role\n            ON employee.role_id = role.id\n        LEFT JOIN department\n            ON role.department_id = department.id\n        LEFT JOIN employee employee_manager\n            ON employee.manager_id = employee_manager.id\n        `\n    }\n\n    const {rows} = await client.query(sql);\n\n    return rows;\n}\n\nexport async function getAllManagers() {\n    const sql = `\n    SELECT DISTINCT\n        employee_manager.id,\n        employee_manager.first_name,\n        employee_manager.last_name\n    FROM employee\n    INNER JOIN employee employee_manager\n        ON employee.manager_id = employee_manager.id\n    `;\n\n    const {rows} = await client.query(sql);\n\n    return rows;\n}\n\nexport async function getEmployeeManager(manager_id: number) {\n    const sql = `\n    SELECT\n        employee.manager_id,\n        CONCAT(employee_manager.first_name, ' ', employee_manager.last_name) AS     manager,\n        CONCAT(employee.first_name, ' ', employee.last_name) AS employee_name\n    FROM employee\n    JOIN employee employee_manager\n        ON employee.manager_id = employee_manager.id\n    WHERE employee.manager_id = $1\n    `;\n\n    const {rows} = await client.query(sql, [manager_id]);\n\n    return rows;\n}\n\nexport async function getEmployeeDept(department_id: number) {\n    const sql = `\n    SELECT\n        employee.id,\n        CONCAT(employee.first_name, ' ', employee.last_name) AS     employee_name\n    FROM employee\n    JOIN role\n        ON employee.role_id = role.id\n    JOIN department\n        ON role.department_id = department.id\n    WHERE role.department_id = $1\n    `;\n\n    const {rows} = await client.query(sql, [department_id]);\n\n    return rows;\n}\n\n\n\nexport async function addDepartment(name: string) {\n    const sql = `\n    INSERT INTO department (name) VALUES ($1)\n    `;\n\n    await client.query(sql, [name]);\n}\n\nexport async function addRole(title: string, salary: number, department_id: number) {\n    const sql = `\n    INSERT INTO role (title, salary, department_id) VALUES ($1, $2, $3)\n    `;\n\n    await client.query(sql, [title, salary, department_id]);\n}\n\nexport async function addEmployee(first_name: string, last_name: string, role_id: number, manager_id: number) {\n    const sql = `\n    INSERT INTO employee (first_name, last_name, role_id, manager_id) VALUES ($1, $2, $3, $4)\n    `;\n\n    await client.query(sql, [first_name, last_name, role_id, manager_id]);\n}\n\nexport async function updateEmployee(id: number, role_id: number) {\n    const sql = `\n    UPDATE employee SET role_id = $1 WHERE id = $2\n    `;\n\n    await client.query(sql, [role_id, id]);\n}\n\nexport async function updateEmpManager(id: number, manager_id: number) {\n    const sql = `\n    UPDATE employee SET manager_id = $2 WHERE id = $1\n    `;\n\n    await client.query(sql, [id, manager_id]);\n}\n\nexport async function deleteDepartment(id: number) {\n    const sql = `\n    DELETE FROM department WHERE id = $1\n    `;\n\n    await client.query(sql, [id]);\n}\n\nexport async function delRole(id: number) {\n    const sql = `\n    DELETE FROM role WHERE id = $1\n    `;\n\n    await client.query(sql, [id]);\n}"]}